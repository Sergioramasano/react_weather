[{"/home/alex/Рабочий стол/my-app/src/index.tsx":"1","/home/alex/Рабочий стол/my-app/src/App.tsx":"2","/home/alex/Рабочий стол/my-app/src/redux/rootReducer.tsx":"3","/home/alex/Рабочий стол/my-app/src/pages/about/About.tsx":"4","/home/alex/Рабочий стол/my-app/src/pages/city/City.tsx":"5","/home/alex/Рабочий стол/my-app/src/components/menu/Menu.tsx":"6","/home/alex/Рабочий стол/my-app/src/redux/actionTypes.tsx":"7","/home/alex/Рабочий стол/my-app/src/pages/home/Home.tsx":"8","/home/alex/Рабочий стол/my-app/src/redux/actionCreators.tsx":"9","/home/alex/Рабочий стол/my-app/src/components/WeatherCard/WeatherCard.tsx":"10","/home/alex/Рабочий стол/my-app/src/components/Heading/Heading.tsx":"11","/home/alex/Рабочий стол/my-app/src/plugins/toCelsium.tsx":"12","/home/alex/Рабочий стол/my-app/src/components/users/users.tsx":"13","/home/alex/Рабочий стол/my-app/src/Middleware/Middleware.tsx":"14","/home/alex/Рабочий стол/my-app/src/sagas.js":"15"},{"size":981,"mtime":1611830229441,"results":"16","hashOfConfig":"17"},{"size":1220,"mtime":1611848517885,"results":"18","hashOfConfig":"17"},{"size":1036,"mtime":1611845265962,"results":"19","hashOfConfig":"17"},{"size":1556,"mtime":1611679781324,"results":"20","hashOfConfig":"17"},{"size":3154,"mtime":1611847179502,"results":"21","hashOfConfig":"17"},{"size":2145,"mtime":1611849302299,"results":"22","hashOfConfig":"17"},{"size":262,"mtime":1611845326721,"results":"23","hashOfConfig":"17"},{"size":3010,"mtime":1611846319187,"results":"24","hashOfConfig":"17"},{"size":852,"mtime":1611845308661,"results":"25","hashOfConfig":"17"},{"size":2085,"mtime":1611668590620,"results":"26","hashOfConfig":"17"},{"size":205,"mtime":1611679304663,"results":"27","hashOfConfig":"17"},{"size":100,"mtime":1611668559805,"results":"28","hashOfConfig":"17"},{"size":2326,"mtime":1611847331192,"results":"29","hashOfConfig":"17"},{"size":219,"mtime":1611746287089,"results":"30","hashOfConfig":"17"},{"size":1166,"mtime":1611924819088,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gcq6g8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/Рабочий стол/my-app/src/index.tsx",[],["65","66"],"/home/alex/Рабочий стол/my-app/src/App.tsx",[],"/home/alex/Рабочий стол/my-app/src/redux/rootReducer.tsx",[],"/home/alex/Рабочий стол/my-app/src/pages/about/About.tsx",[],"/home/alex/Рабочий стол/my-app/src/pages/city/City.tsx",["67"],"import { Card, LinearProgress } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport { kelToCelcium } from \"../../plugins/toCelsium\";\nimport { setCityWeather } from \"../../redux/actionCreators\";\n\nimport \"./City.scss\";\n\nconst City = (props: any) => {\n  let [quote, setQuote]: any = useState();\n\n  const writeWeatherToStorage = () => {\n    const cityWeather = localStorage.getItem(\"weather\");\n    if (cityWeather) props.setWeather(JSON.parse(cityWeather));\n    localStorage.setItem(\"weather\", JSON.stringify(props.weather));\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://favqs.com/api/qotd`)\n      .then((response) => {\n        setQuote(response.data.quote);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    writeWeatherToStorage();\n  }, []);\n\n  return (\n    <Card className=\"City\">\n      {props.weather && quote ? (\n        <>\n          <Heading name={props.weather.name}></Heading>\n          <ul>\n            <li>\n              <span>\n                <b>city:</b>\n              </span>\n              <span>{props.weather.name}</span>\n            </li>\n            <li>\n              <span>\n                <b>country:</b>\n              </span>\n              <span>{props.weather.sys.country}</span>\n            </li>\n            <li>\n              <span>\n                <b>temp:</b>\n              </span>\n              <span>{kelToCelcium(props.weather.main.temp)}</span>\n            </li>\n            <li>\n              <span>\n                <b>fell:</b>\n              </span>\n              <span>{kelToCelcium(props.weather.main.feels_like)}</span>\n            </li>\n            <li>\n              <span>\n                <b>description:</b>\n              </span>\n              <span>{props.weather.weather[0].description}</span>\n            </li>\n            <li>\n              <span>\n                <b>temp main:</b>\n              </span>\n              <span>{props.weather.weather[0].main}</span>\n            </li>\n            <li>\n              <span>\n                <b>temp max:</b>\n              </span>\n              <span>{kelToCelcium(props.weather.main.temp_max)}</span>\n            </li>\n            <li>\n              <span>\n                <b>temp min:</b>\n              </span>\n              <span>{kelToCelcium(props.weather.main.temp_min)}</span>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <LinearProgress color=\"secondary\" />\n      )}\n\n      <Alert className=\"alert-quote\">\n        {quote ? <q>{quote.body}</q> : null}\n        {quote ? <p>-- {quote.author}</p> : null}\n      </Alert>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    weather: state.cityWeather,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setWeather: (payload: string) => setCityWeather(dispatch, payload),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(City);\n","/home/alex/Рабочий стол/my-app/src/components/menu/Menu.tsx",[],"/home/alex/Рабочий стол/my-app/src/redux/actionTypes.tsx",[],"/home/alex/Рабочий стол/my-app/src/pages/home/Home.tsx",["68"],"import { Button, CircularProgress, TextField } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport {\n  removeError,\n  setCity,\n  setCityWeather,\n  setError,\n} from \"../../redux/actionCreators\";\nimport { Dispatch } from \"redux\";\nimport WeatherCard from \"../../components/WeatherCard/WeatherCard\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./Home.scss\";\nimport { Heading } from \"../../components/Heading/Heading\";\nimport image from \"../../images/umbrella.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nconst Home = (props: any) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const weather = localStorage.getItem(\"weather\");\n    props.removeError();\n    if (weather) {\n      props.setCityWeatherByName(JSON.parse(weather));\n    }\n  }, []);\n\n  const inputHandler = (event: any): any => {\n    let inputData = \"\";\n    if (event.type === \"submit\") {\n      event.preventDefault();\n      inputData = event.target[0].value;\n    }\n    if (\n      event.key === \"Enter\" ||\n      event.type === \"click\" ||\n      event.type === \"submit\"\n    ) {\n      event.preventDefault();\n      props.removeError();\n      props.setCityName(inputData || event.target.value);\n    }\n  };\n\n  const setErroroText = () => {\n    return \"it is the required field!\";\n  };\n\n  return (\n    <section className=\"Home\">\n      <Heading name={\"weather\"}></Heading>\n      <form\n        onSubmit={inputHandler}\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          <div className=\"flex bettween center\">\n            <TextField\n              error={props.error}\n              id=\"standard-error-helper-text\"\n              label=\"Enter city name\"\n              onKeyPress={inputHandler}\n              helperText={setErroroText()}\n            />\n            <Button type=\"submit\">\n              <SearchIcon />\n            </Button>\n          </div>\n          <section className=\"cards\">\n            {props.weather ? (\n              <WeatherCard weather={props.weather} />\n            ) : (\n              <CircularProgress color=\"secondary\" />\n            )}\n          </section>\n          <img className=\"umbrella\" src={image} alt=\"umbrella\" />\n        </div>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    cityName: state.city,\n    weather: state.cityWeather,\n    error: state.errorText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setCityName: (payload: string) => dispatch(setCity(payload)),\n    setCityWeatherByName: (payload: any) => setCityWeather(dispatch, payload),\n    setError: (payload: string) => dispatch(setError(payload)),\n    removeError: () => dispatch(removeError()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/home/alex/Рабочий стол/my-app/src/redux/actionCreators.tsx",[],"/home/alex/Рабочий стол/my-app/src/components/WeatherCard/WeatherCard.tsx",[],"/home/alex/Рабочий стол/my-app/src/components/Heading/Heading.tsx",[],"/home/alex/Рабочий стол/my-app/src/plugins/toCelsium.tsx",[],"/home/alex/Рабочий стол/my-app/src/components/users/users.tsx",[],"/home/alex/Рабочий стол/my-app/src/Middleware/Middleware.tsx",[],"/home/alex/Рабочий стол/my-app/src/sagas.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":33,"column":6,"nodeType":"75","endLine":33,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":36,"column":6,"nodeType":"75","endLine":36,"endColumn":8,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'writeWeatherToStorage'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [writeWeatherToStorage]",{"range":"87","text":"88"},"Update the dependencies array to be: [props]",{"range":"89","text":"90"},[1034,1036],"[writeWeatherToStorage]",[992,994],"[props]"]